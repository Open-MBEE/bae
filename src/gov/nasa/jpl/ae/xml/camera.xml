<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="eventSchema.xsd">
	<epoch>2013-11-22T11:30:00-07:00</epoch>
	<horizon>P1D</horizon>
	<timeUnits>seconds</timeUnits>
	<eventToBeExecuted>
		<eventType>ImageCaptureScenario</eventType>
		<arguments>
			<parameter>
				<name>startTime</name>
				<value>0</value>
			</parameter>
			<parameter>
				<name>duration</name>
				<value>Timepoint.getHorizonDuration()</value>
			</parameter>
		</arguments>
	</eventToBeExecuted>
	<events>
		<event>
			<class>
				<name>ImageCaptureScenario</name>
				<members>
					<parameter>
						<name>camera</name>
						<type>Camera</type>
						<value>new Camera()</value>
					</parameter>
				</members>
			</class>
			<elaborations>
				<elaboration>
					<eventInvocation>
						<enclosingInstance>camera</enclosingInstance>
						<eventType>Camera.ImageCapture</eventType>
						<eventName>imageCapture</eventName>
						<arguments>
							<parameter>
								<name>startTime</name>
								<value>startTime</value>
							</parameter>
						</arguments>
					</eventInvocation>
				</elaboration>
			</elaborations>
		</event>
	</events>
	<classes>
		<class>
			<name>Camera</name>
			<import>java.util.ArrayList</import>
			<import>java.util.Arrays</import>
			<members>
                <parameter>
                    <name>powerMEV</name>
                    <type>TimeVaryingPlottableMap&lt; Double &gt;</type>
                </parameter>
                <parameter>
                    <name>powerCBE</name>
                	<type>TimeVaryingPlottableMap&lt; Double &gt;</type>
                	<value>new TimeVaryingPlottableMap&lt; Double &gt;("powerCBE")</value>
                </parameter>
                <parameter>
                    <name>powerContingency</name>
                    <type>double</type>
                    <value>0.1</value>
                </parameter>
	        	<parameter>
	        		<name>mode</name>
	        		<type>TimeVaryingPlottableMap&lt; Integer &gt;</type>
	        		<value>new TimeVaryingPlottableMap&lt; Integer &gt;("mode")</value>
	        	</parameter>
	        	<parameter static="true"><name>off</name><type>int</type><value>0</value></parameter>
	        	<parameter static="true"><name>initializing</name><type>int</type><value>1</value></parameter>
	        	<parameter static="true"><name>idle</name><type>int</type><value>2</value></parameter>
	        	<parameter static="true"><name>takingImage</name><type>int</type><value>3</value></parameter>
	        	<parameter static="true"><name>amount</name><type>ArrayList&lt; Double &gt;</type><value>new ArrayList&lt; Double &gt;(Arrays.asList(0.0, 7.5, 2.0, 10.0))</value></parameter>
	        </members>
            <dependencies>
            	<dependency>
            		<name>powerMEV</name>
            		<value>new TimeVaryingPlottableMap&lt; Double &gt;("powerMEV", powerCBE *( 1.0 + powerContingency ))</value>
            	</dependency>
            </dependencies>
			<events>
				<event>
					<class>
						<name>PowerChanger</name>
						<import>java.util.Set</import>
						<members>
							<parameter>
								<name>beginAmount</name>
								<type>double</type>
								<value>0.0</value>
							</parameter>
							<parameter>
								<name>endAmount</name>
								<type>double</type>
								<value>0.0</value>
							</parameter>
							<parameter>
								<name>power</name>
								<type>TimeVaryingMap&lt; Double &gt;</type>
							</parameter>
							<parameter>
								<name>mode</name>
								<type>TimeVaryingMap&lt; Integer &gt;</type>
							</parameter>
							<parameter>
								<name>beginMode</name>
								<type>int</type>
							</parameter>
							<parameter>
								<name>endMode</name>
								<type>int</type>
							</parameter>
						</members>
						<constraints>
						</constraints>
						<dependencies>
							<dependency>
								<name>beginAmount</name>
								<value>amount.get(beginMode)</value>
							</dependency>
							<dependency>
								<name>endAmount</name>
								<value>amount.get(endMode)</value>
							</dependency>
						</dependencies>
					</class>
					<effects>
						<effect>power.setValue(startTime, beginAmount)</effect>
						<effect>power.setValue(endTime, endAmount)</effect>
						<effect>mode.setValue(startTime, beginMode)</effect>
						<effect>mode.setValue(endTime, endMode)</effect>
					</effects>
				</event>
				<event>
					<class>
						<name>ImageCapture</name>
						<import>java.util.Set</import>
						<members>
							<parameter>
								<name>initializeDuration</name>
								<type>Integer</type>
								<value>20</value>
							</parameter>
							<parameter>
								<name>takeImageDuration</name>
								<type>Integer</type>
								<value>10</value>
							</parameter>
						</members>
						<constraints/>
						<dependencies>
							<dependency>
								<name>duration</name>
								<value>initializeDuration + takeImageDuration + 5</value>
							</dependency>
						</dependencies>
						<events/>
					</class>
					<elaborations>
						<elaboration>
							<eventInvocation>
								<eventType>PowerChanger</eventType>
								<eventName>initialize</eventName>
								<arguments>
									<parameter>
										<name>power</name>
										<value>powerCBE</value>
									</parameter>
									<parameter>
										<name>mode</name>
										<value>mode</value>
									</parameter>
									<parameter>
										<name>startTime</name>
										<value>startTime</value>
									</parameter>
									<parameter>
										<name>duration</name>
										<value>initializeDuration</value>
									</parameter>
									<parameter>
										<name>beginMode</name>
										<value>initializing</value>
									</parameter>
									<parameter>
										<name>endMode</name>
										<value>idle</value>
									</parameter>
								</arguments>
							</eventInvocation>
							<condition>
								<expression>true</expression>
							</condition>
						</elaboration>
						<elaboration>
							<eventInvocation>
								<eventType>PowerChanger</eventType>
								<eventName>takeImage</eventName>
								<arguments>
									<parameter>
										<name>power</name>
										<value>powerCBE</value>
									</parameter>
									<parameter>
										<name>mode</name>
										<value>mode</value>
									</parameter>
									<parameter>
										<name>startTime</name>
										<value>startTime + initializeDuration + 2</value>
									</parameter>
									<parameter>
										<name>duration</name>
										<value>takeImageDuration</value>
									</parameter>
									<parameter>
										<name>beginMode</name>
										<value>takingImage</value>
									</parameter>
									<parameter>
										<name>endMode</name>
										<value>idle</value>
									</parameter>
								</arguments>
							</eventInvocation>
							<condition>
								<expression>true</expression>
							</condition>
						</elaboration>
						<elaboration>
							<eventInvocation>
								<eventType>PowerChanger</eventType>
								<eventName>turnOff</eventName>
								<arguments>
									<parameter>
										<name>power</name>
										<value>powerCBE</value>
									</parameter>
									<parameter>
										<name>mode</name>
										<value>mode</value>
									</parameter>
									<parameter>
										<name>startTime</name>
										<value>startTime + initializeDuration + takeImageDuration + 4</value>
									</parameter>
									<parameter>
										<name>duration</name>
										<value>1</value>
									</parameter>
									<parameter>
										<name>beginMode</name>
										<value>idle</value>
									</parameter>
									<parameter>
										<name>endMode</name>
										<value>off</value>
									</parameter>
								</arguments>
							</eventInvocation>
							<condition>
								<expression>true</expression>
							</condition>
						</elaboration>
					</elaborations>
				</event>
			</events>
		</class>
	</classes>
</scenario>
